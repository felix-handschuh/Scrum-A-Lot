/// <reference types="@figma/plugin-typings" />
import { JSX } from 'preact';
import { OnValueChange, Props } from '../../../types/types';
export declare type TextboxColorProps<Name extends string, HexColorName extends string, OpacityName extends string> = {
    disabled?: boolean;
    name?: Name;
    noBorder?: boolean;
    propagateEscapeKeyDown?: boolean;
    revertOnEscapeKeyDown?: boolean;
    hexColor: string;
    hexColorName?: HexColorName;
    hexColorPlaceholder?: string;
    onHexColorInput?: OmitThisParameter<JSX.GenericEventHandler<HTMLInputElement>>;
    onHexColorValueInput?: OnValueChange<string, HexColorName>;
    opacity: string;
    opacityName?: OpacityName;
    opacityPlaceholder?: string;
    onOpacityInput?: OmitThisParameter<JSX.GenericEventHandler<HTMLInputElement>>;
    onOpacityNumericValueInput?: OnValueChange<null | number, OpacityName>;
    onOpacityValueInput?: OnValueChange<string, OpacityName>;
    onRgbaColorValueInput?: OnValueChange<null | RGBA, Name>;
};
export declare function TextboxColor<Name extends string, HexColorName extends string, OpacityName extends string>({ disabled, name, noBorder, propagateEscapeKeyDown, revertOnEscapeKeyDown, hexColor, hexColorName, hexColorPlaceholder, onHexColorInput, onHexColorValueInput, opacity, opacityName, opacityPlaceholder, onOpacityInput, onOpacityNumericValueInput, onOpacityValueInput, onRgbaColorValueInput, ...rest }: Props<HTMLInputElement, TextboxColorProps<Name, HexColorName, OpacityName>>): JSX.Element;
//# sourceMappingURL=textbox-color.d.ts.map