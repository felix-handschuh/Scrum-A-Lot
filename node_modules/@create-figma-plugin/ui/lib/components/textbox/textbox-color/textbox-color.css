.textboxColor {
  position: relative;
  z-index: var(--z-index-1);
  display: flex;
  width: 144px;
}
.textboxColor:focus-within {
  z-index: var(
    --z-index-2
  ); /* stack `.textboxColor` over its sibling elements */
}
.disabled {
  opacity: var(--opacity-30);
}

.color {
  position: absolute;
  top: 6px;
  left: 8px;
  display: flex;
  overflow: hidden;
  width: 16px;
  height: 16px;
  background-image: url('data:image/svg+xml;utf8,%3Csvg%20width%3D%226%22%20height%3D%226%22%20viewBox%3D%220%200%206%206%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%3Cpath%20d%3D%22M0%200H3V3H0V0Z%22%20fill%3D%22%23E1E1E1%22/%3E%3Cpath%20d%3D%22M3%200H6V3H3V0Z%22%20fill%3D%22white%22/%3E%3Cpath%20d%3D%22M3%203H6V6H3V3Z%22%20fill%3D%22%23E1E1E1%22/%3E%3Cpath%20d%3D%22M0%203H3V6H0V3Z%22%20fill%3D%22white%22/%3E%3C/svg%3E%0A');
  border-radius: 1px;
}
.colorFill {
  flex-grow: 1;
}
.colorBorder {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  border: 1px solid rgba(0, 0, 0, 0.1);
  border-radius: 2px;
  pointer-events: none;
}

.hexColorSelector {
  position: absolute;
  top: -4px;
  left: 0;
  width: 24px;
  height: 36px;
  opacity: 0;
}

.input {
  display: block;
  width: 100%;
  height: 28px;
  background-color: transparent;
  color: var(--color-black-80);
}

.disabled .input,
.disabled .hexColorSelector {
  cursor: not-allowed;
}

.input::placeholder {
  color: var(--color-black-30);
}

.input::-webkit-inner-spin-button,
.input::-webkit-outer-spin-button {
  -webkit-appearance: none;
}

.hexColorInput {
  flex: 0 0 97px;
  padding-left: 32px;
}
.opacityInput {
  padding-left: var(--space-extra-small);
}

.border {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  border-width: 1px;
  border-color: var(--color-silver);
  border-radius: var(--border-radius-2);
  pointer-events: none;
}
.textboxColor:not(.disabled) .input:focus ~ .border,
.textboxColor:not(.disabled) .hexColorSelector:focus ~ .border {
  top: -1px;
  bottom: -1px;
  border-width: 2px;
  border-color: var(--color-accent);
}
.noBorder .border {
  border-color: transparent;
}
.noBorder:not(.disabled):hover .border {
  border-color: var(--color-silver);
}
.noBorder:not(.disabled) .input:focus ~ .border,
.noBorder:not(.disabled) .hexColorSelector:focus ~ .border {
  border-width: 2px;
  border-color: var(--color-accent);
}

.divider {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 96px;
  width: 1px;
  background-color: var(--color-silver);
  pointer-events: none;
}
.textboxColor:not(.disabled) .input:focus ~ .divider {
  background-color: var(--color-silver);
}
.noBorder .divider {
  background-color: transparent;
}
.noBorder:not(.disabled):hover .divider {
  background-color: var(--color-silver);
}
