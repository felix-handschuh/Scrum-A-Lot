import { Fragment, h } from "preact";
import { useCallback } from "preact/hooks";
import styles from "./tabs.css";
const ITEM_ID_DATA_ATTRIBUTE_NAME = "data-tabs-item-id";
export function Tabs({ name, onChange = function () { }, onValueChange = function () { }, options, propagateEscapeKeyDown = true, value, ...rest }) {
    const handleChange = useCallback(function (event) {
        const id = event.currentTarget.getAttribute(ITEM_ID_DATA_ATTRIBUTE_NAME);
        const newValue = options[parseInt(id, 10)].value;
        onValueChange(newValue, name);
        onChange(event);
    }, [name, onChange, onValueChange, options]);
    const handleKeyDown = useCallback(function (event) {
        if (event.key !== "Escape") {
            return;
        }
        if (propagateEscapeKeyDown === false) {
            event.stopPropagation();
        }
        event.currentTarget.blur();
    }, [propagateEscapeKeyDown]);
    const activeOption = options.find(function (option) {
        return option.value === value;
    });
    return (h(Fragment, null, h("div", { class: styles.tabs }, options.map(function (option, index) {
        return (h("label", { key: index, class: styles.label }, h("input", { ...rest, checked: value === option.value, class: styles.input, name: name, onChange: handleChange, onKeyDown: handleKeyDown, tabIndex: 0, type: "radio", value: option.value, ...{ [ITEM_ID_DATA_ATTRIBUTE_NAME]: `${index}` } }), h("div", { class: styles.value }, option.value)));
    })), typeof activeOption === "undefined" ? null : activeOption.children));
}
//# sourceMappingURL=tabs.js.map