import { h } from "preact";
import { useState } from "preact/hooks";
import { useInitialFocus } from "../../hooks/use-initial-focus/use-initial-focus.js";
import { Toggle } from "./toggle.js";
export default { title: "Components/Toggle" };
export const Unselected = function () {
    const [value, setValue] = useState(false);
    function handleChange(event) {
        const newValue = event.currentTarget.checked;
        console.log(newValue);
        setValue(newValue);
    }
    return h(Toggle, { onChange: handleChange, value: value });
};
export const Focused = function () {
    const [value, setValue] = useState(false);
    function handleChange(event) {
        const newValue = event.currentTarget.checked;
        console.log(newValue);
        setValue(newValue);
    }
    return h(Toggle, { ...useInitialFocus(), onChange: handleChange, value: value });
};
export const Selected = function () {
    const [value, setValue] = useState(true);
    function handleChange(event) {
        const newValue = event.currentTarget.checked;
        console.log(newValue);
        setValue(newValue);
    }
    return h(Toggle, { onChange: handleChange, value: value });
};
export const Disabled = function () {
    function handleChange() {
        throw new Error("This function should not be called");
    }
    return h(Toggle, { disabled: true, onChange: handleChange, value: false });
};
export const OnValueChange = function () {
    const [value, setValue] = useState(true);
    return h(Toggle, { onValueChange: setValue, value: value });
};
//# sourceMappingURL=toggle.stories.js.map