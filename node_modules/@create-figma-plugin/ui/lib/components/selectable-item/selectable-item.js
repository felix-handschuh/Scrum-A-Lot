import { h } from "preact";
import { useCallback } from "preact/hooks";
import { createClassName } from "../../utilities/create-class-name.js";
import { IconMenuCheckmarkChecked16 } from "../icon/icon-16/icon-menu-checkmark-checked-16.js";
import styles from "./selectable-item.css";
export function SelectableItem({ bold = false, children, disabled = false, indent = false, name, onChange = function () { }, onValueChange = function () { }, propagateEscapeKeyDown = true, value = false, ...rest }) {
    const handleChange = useCallback(function (event) {
        onValueChange(!value, name);
        onChange(event);
    }, [name, onChange, onValueChange, value]);
    const handleKeyDown = useCallback(function (event) {
        if (event.key !== "Escape") {
            return;
        }
        if (propagateEscapeKeyDown === false) {
            event.stopPropagation();
        }
        event.currentTarget.blur();
    }, [propagateEscapeKeyDown]);
    return (h("label", { class: createClassName([
            styles.selectableItem,
            disabled === true ? styles.disabled : null,
            bold === true ? styles.bold : null,
            indent === true ? styles.indent : null,
            value === true ? styles.checked : null
        ]) }, h("input", { ...rest, checked: value === true, class: styles.input, disabled: disabled === true, name: name, onChange: handleChange, onKeyDown: disabled === true ? undefined : handleKeyDown, tabIndex: disabled === true ? -1 : 0, type: "checkbox" }), h("div", { class: styles.children }, children), value === true ? (h("div", { class: styles.checkIcon }, h(IconMenuCheckmarkChecked16, null))) : null));
}
//# sourceMappingURL=selectable-item.js.map