import { h } from "preact";
import { useCallback } from "preact/hooks";
import { createClassName } from "../../utilities/create-class-name.js";
import styles from "./layer.css";
export function Layer({ bold = false, children, color = "black-80", name, onChange = function () { }, onValueChange = function () { }, pageName, value = false, icon, ...rest }) {
    const handleChange = useCallback(function (event) {
        const newValue = event.currentTarget.checked;
        onValueChange(newValue, name);
        onChange(event);
    }, [name, onChange, onValueChange]);
    return (h("label", { class: createClassName([styles.layer, styles[color]]) }, h("input", { ...rest, checked: value === true, class: styles.input, name: name, onChange: handleChange, tabIndex: 0, type: "checkbox" }), h("div", { class: styles.fill }), typeof icon === "undefined" ? null : (h("div", { class: styles.icon }, icon)), h("div", { class: createClassName([
            styles.layerName,
            bold === true ? styles.bold : null
        ]) }, children), typeof pageName === "undefined" ? null : (h("div", { class: styles.pageName }, pageName))));
}
//# sourceMappingURL=layer.js.map