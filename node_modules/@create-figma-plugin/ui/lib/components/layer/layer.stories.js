import { h } from "preact";
import { useState } from "preact/hooks";
import { IconLayerComponent16 } from "../icon/icon-16/icon-layer-component-16.js";
import { IconLayerFrame16 } from "../icon/icon-16/icon-layer-frame-16.js";
import { Layer } from "./layer.js";
export default {
    parameters: {
        fixedWidth: true
    },
    title: "Components/Layer"
};
export const Frame = function () {
    const [value, setValue] = useState(false);
    function handleChange(event) {
        const newValue = event.currentTarget.checked;
        console.log(newValue);
        setValue(newValue);
    }
    return (h(Layer, { icon: h(IconLayerFrame16, null), onChange: handleChange, value: value }, "Text"));
};
export const Selected = function () {
    const [value, setValue] = useState(true);
    function handleChange(event) {
        const newValue = event.currentTarget.checked;
        console.log(newValue);
        setValue(newValue);
    }
    return (h(Layer, { icon: h(IconLayerFrame16, null), onChange: handleChange, value: value }, "Text"));
};
export const PageName = function () {
    const [value, setValue] = useState(false);
    function handleChange(event) {
        const newValue = event.currentTarget.checked;
        console.log(newValue);
        setValue(newValue);
    }
    return (h(Layer, { icon: h(IconLayerFrame16, null), onChange: handleChange, pageName: "Page Name", value: value }, "Text"));
};
export const LongText = function () {
    const longText = Array(100).fill("Text").join(" ");
    const [value, setValue] = useState(false);
    function handleChange(event) {
        const newValue = event.currentTarget.checked;
        console.log(newValue);
        setValue(newValue);
    }
    return (h(Layer, { icon: h(IconLayerFrame16, null), onChange: handleChange, pageName: "Page Name", value: value }, longText));
};
export const Component = function () {
    const [value, setValue] = useState(false);
    function handleChange(event) {
        const newValue = event.currentTarget.checked;
        console.log(newValue);
        setValue(newValue);
    }
    return (h(Layer, { bold: true, color: "purple", icon: h(IconLayerComponent16, null), onChange: handleChange, value: value }, "Text"));
};
//# sourceMappingURL=layer.stories.js.map