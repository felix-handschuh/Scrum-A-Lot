import { ComponentChildren, JSX } from 'preact';
import { OnValueChange, Props } from '../../types/types';
export declare type SegmentedControlProps<Name extends string, Value extends boolean | number | string> = {
    disabled?: boolean;
    name?: Name;
    onChange?: OmitThisParameter<JSX.GenericEventHandler<HTMLInputElement>>;
    onValueChange?: OnValueChange<Value, Name>;
    options: Array<SegmentedControlOption<Value>>;
    propagateEscapeKeyDown?: boolean;
    value: Value;
};
export declare type SegmentedControlOption<Value extends boolean | number | string = string> = {
    disabled?: boolean;
    children?: ComponentChildren;
    value: Value;
};
export declare function SegmentedControl<Name extends string, Value extends boolean | number | string>({ disabled, name, onChange, onValueChange, options, propagateEscapeKeyDown, value, ...rest }: Props<HTMLInputElement, SegmentedControlProps<Name, Value>>): JSX.Element;
//# sourceMappingURL=segmented-control.d.ts.map