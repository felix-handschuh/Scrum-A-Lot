import { h } from "preact";
import { useCallback } from "preact/hooks";
import { createClassName } from "../../utilities/create-class-name.js";
import styles from "./segmented-control.css";
const ITEM_ID_DATA_ATTRIBUTE_NAME = "data-segmented-control-item-id";
export function SegmentedControl({ disabled = false, name, onChange = function () { }, onValueChange = function () { }, options, propagateEscapeKeyDown = true, value, ...rest }) {
    const handleChange = useCallback(function (event) {
        const id = event.currentTarget.getAttribute(ITEM_ID_DATA_ATTRIBUTE_NAME);
        const newValue = options[parseInt(id, 10)].value;
        onValueChange(newValue, name);
        onChange(event);
    }, [name, onChange, onValueChange, options]);
    const handleKeyDown = useCallback(function (event) {
        if (event.key !== "Escape") {
            return;
        }
        if (propagateEscapeKeyDown === false) {
            event.stopPropagation();
        }
        event.currentTarget.blur();
    }, [propagateEscapeKeyDown]);
    return (h("div", { class: createClassName([
            styles.segmentedControl,
            disabled === true ? styles.disabled : null
        ]) }, h("div", { class: styles.labels }, options.map(function (option, index) {
        const children = typeof option.children === "undefined"
            ? `${option.value}`
            : option.children;
        const isOptionDisabled = disabled === true || option.disabled === true;
        return (h("label", { key: index, class: styles.label }, h("input", { ...rest, checked: value === option.value, class: styles.input, disabled: isOptionDisabled === true, name: name, onChange: handleChange, onKeyDown: handleKeyDown, tabIndex: isOptionDisabled === true ? -1 : 0, type: "radio", value: `${option.value}`, ...{ [ITEM_ID_DATA_ATTRIBUTE_NAME]: `${index}` } }), h("div", { class: styles.children }, h("div", { class: typeof children === "string" ? styles.text : undefined }, children))));
    })), h("div", { class: styles.border })));
}
//# sourceMappingURL=segmented-control.js.map